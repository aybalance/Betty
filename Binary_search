#include <iostream>
using namespace std;
int binary_dv();
int insert_sorted_dv();
int delete_Element_dv();

int binarySearch(int arr[], int low, int high, int key)
{
	if (high < low)
		return -1;
	int mid = (low+high)/2;
	if (key == arr[mid] )
		return mid;
	if (key > arr[mid] )
	{
		return binarySearch(arr, (mid+1), high, key);
	}
	return binarySearch(arr, low, (mid-1), key);
}

int insert_sorted(int arr[], int n, int key, int capacity)
{
	if (n >= capacity)
		return n;
	int i;
	for (i = n-1; (i >= 0 && arr[i] > key); i--)
		arr[i+1]=arr[i];
	arr[i+1]=key;
	return (n+1);
}

int delete_Element(int arr[], int n, int key)
{
		int pos = binarySearch(arr, 0, n-1, key);
		if (pos == -1)
		{
			cout<<"Element not found";
			return n;
		}
		
		for (int i = pos; i < n-1; i++)
			arr[i]=arr[i+1];
		
		return n-1;
}
		
int main(int argc, char *argv[])
{
	binary_dv();
	insert_sorted_dv();
	cout<< "\n";
	delete_Element_dv();
}
int binary_dv()
{
	int arr[]={4,5,6,7,8,9,10};
	int n,key;
	n=sizeof(arr)/sizeof(arr[0]);
	key=6;
	cout<<"Index: "<<binarySearch(arr, 0, n-1, key);
}

int insert_sorted_dv()
{
	int arr[20]={2,4,6,8,10};
	int capacity=sizeof(arr)/sizeof(arr[0]);
	int n=5;
	int key=5;
	n= insert_sorted(arr,n,key,capacity);
	cout<<" \n After execution: ";
	for (int i=0; i<n ; i++)
		cout<< arr[i] <<" ";
		
	return 0;
}

int delete_Element_dv()
{
	int arr[]={10,20,30,40,59};
	int n = sizeof(arr)/sizeof(arr[0]);
	int key=20;
	
	n= delete_Element(arr, n, key);
	cout<< "After deleting operation ";	
	for(int i=0; i < n; i++)
		cout << arr[i] << " ";
}
